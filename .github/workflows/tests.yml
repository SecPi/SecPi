name: Tests

on:
  push:
    branches: [ main, next ]
  pull_request:
    branches: [ main, next ]

jobs:

  tests:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ "ubuntu-latest" ]  # "macos-latest", "windows-latest"
        python-version: [ "3.7", "3.8", "3.9", "3.10", "3.11" ]

    env:
      OS_TYPE: ${{ matrix.os }}
      PYTHON_VERSION: ${{ matrix.python-version }}

    services:

      garagemq:
        image: amplitudo/garagemq
        ports:
          - 5672:5672

    name: Python ${{ matrix.python-version }} on OS ${{ matrix.os }}
    steps:

    - name: Acquire sources
      uses: actions/checkout@v3

    - name: Start Mosquitto
      uses: namoshek/mosquitto-github-action@v1
      with:
        version: "2.0.15"
        ports: '1883:1883 8883:8883'
        config: ${{ github.workspace }}/.github/etc/mosquitto.conf

    - name: Install dependencies (Linux)
      if: runner.os == 'Linux'
      run: |

        # Install `socat` and `amqp-publish`.
        sudo apt-get update
        sudo apt-get install --yes socat amqp-tools mosquitto-clients

    - name: Install dependencies (macOS)
      if: runner.os == 'macOS'
      run: |

        # Install `socat` and `amqp-publish`.
        brew install socat rabbitmq mosquitto

    - name: Setup Python
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
        architecture: x64
        cache: 'pip'
        cache-dependency-path: 'pyproject.toml'

    - name: Setup project
      run: |

        # `setuptools 0.64.0` adds support for editable install hooks (PEP 660).
        # https://github.com/pypa/setuptools/blob/main/CHANGES.rst#v6400
        pip install "setuptools>=64" --upgrade
        
        # Install `pygame-2.1.3.dev8`, which is compatible with Python 3.11.
        # https://github.com/pygame/pygame/issues/3522
        pip install "pygame<3" --upgrade --pre

        # Install package in editable mode.
        pip install --editable=.[test,develop]
        
    - name: Check code style
      run: |
        poe check-style

    - name: Run tests
      run: |
        pytest

    - name: Upload coverage results to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        flags: unittests
        env_vars: OS,PYTHON
        name: codecov-umbrella
        fail_ci_if_error: false
