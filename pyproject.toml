# ==================
# Project definition
# ==================

# Derived from https://peps.python.org/pep-0621/

[project]
name = "secpi"
version = "2.0.0-dev1"
description = "SecPi is a software framework for building alarm systems with Linux"
readme = "README.md"
requires-python = ">=3.7"
license = {text = "GPLv3+"}
keywords = ["alarm", "monitoring", "observation", "security", "alerting", "notification", "amqp", "mqtt", "modbus", "ifttt"]
authors = [
  {name = "Philip WÃ¶lfel", email = "is141524@fhstp.ac.at"},
  {name = "Martin Liebl", email = "is141513@fhstp.ac.at"},
]
maintainers = [
  {name = "Andreas Motl", email = "andreas.motl@cicerops.de"},
  {name = "Jan Hoffmann", email = "tonke@cicerops.de"}
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: Console",
  "Environment :: Web Environment",
  "Framework :: CherryPy",
  "Intended Audience :: Customer Service",
  "Intended Audience :: Developers",
  "Intended Audience :: Education",
  "Intended Audience :: End Users/Desktop",
  "Intended Audience :: Information Technology",
  "Intended Audience :: Legal Industry",
  "Intended Audience :: Manufacturing",
  "Intended Audience :: System Administrators",
  "Intended Audience :: Telecommunications Industry",
  "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
  "Operating System :: MacOS :: MacOS X",
  "Operating System :: POSIX :: Linux",
  "Operating System :: Unix",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Topic :: Communications",
  "Topic :: Education",
  "Topic :: Home Automation",
  "Topic :: Office/Business",
  "Topic :: Security",
  "Topic :: Software Development :: Libraries",
  "Topic :: Software Development :: Object Brokering",
  "Topic :: System :: Hardware",
  "Topic :: System :: Logging",
  "Topic :: System :: Monitoring",
  "Topic :: System :: Networking",
  "Topic :: System :: Networking :: Monitoring",
  "Topic :: System :: Systems Administration",
  "Topic :: Utilities",
]

dependencies = [

  # Baseline modules.
  "appdirs<2",
  "dataclass-wizard<1",
  "toml<1",
  "requests<3",
  "pika<2",
  "python-dateutil<3",
  "SQLAlchemy<1.5",
  "netifaces<1",
  "dataclasses; python_version<'3.7'",
  "importlib-metadata; python_version<'3.8'",

  # Web interface modules.
  "CherryPy<19",
  "CherryPy-SQLAlchemy<1",
  "Mako<2",

  # Sensor modules. Support for host pinging.
  "ping3<5",

  # Notifier modules. Support for Dropbox, SMS, Slack, Twitter.
  "dropbox<12",
  "python-gsmmodem<1",
  "slacker<1",
  "tweepy<5",

  # Action modules.
  "pygame<3",
  "opencv-python<5",

  # IsarEngineering modules. Support for VCR, SIP, ADAM.
  "ffmpy<1",
  "func-timeout<5",
  "paho-mqtt<2",
  "pymodbus<3",
  "pycall<3",
]

[project.optional-dependencies]
test = [
  "pytest<8",
  "pytest-cov<4",
  "pytest-mock<4",
  "pyfakefs<5",
  "smtpdfix<1",
  "surrogate<1",
]
develop = [
  "isort<6",
  "black<23",
  "build<1",
  "poethepoet<1",
  "pika-stubs<1; python_version>='3.8'",
  "pip-review<2",  # Use `pip-review --local --interactive` to upgrade outdated packages.
  "ruff",
]

[tool.setuptools]
# https://setuptools.pypa.io/en/latest/userguide/datafiles.html
include-package-data = true

[tool.setuptools.packages.find]
# https://setuptools.pypa.io/en/latest/userguide/package_discovery.html
include = ["secpi*"]

[project.scripts]
secpi-manager = "secpi.manager:main"
secpi-worker = "secpi.worker:main"
secpi-web = "secpi.webinterface:main"


[project.urls]
homepage = "https://github.com/isarengineering/SecPi"
documentation = "https://github.com/SecPi/SecPi/wiki"
repository = "https://github.com/isarengineering/SecPi"
changelog = "https://github.com/isarengineering/SecPi/blob/next/CHANGES.rst"


# ==================
# Tool configuration
# ==================

# Configuration snippets for Black, isort, pytest, coverage, and ruff.

[tool.black]
line-length = 120

[tool.isort]
profile = "black"
extend_skip = [".cache", ".coverage-reports", ".github", ".pytest_cache", ".ruff_cache", ".vagrant", ".venv39", "tmp", "var"]
extend_skip_glob = ["**/site-packages/**"]

[tool.pytest.ini_options]
minversion = "2.0"
addopts = "-rfEX --capture=no -p pytester --strict-markers --verbosity=3 --cov --cov-report=term-missing --cov-report=xml"
log_level = "DEBUG"
log_cli_level = "DEBUG"
testpaths = ["testing"]
xfail_strict = true
markers = [
]

[tool.coverage.run]
branch = false
parallel = true
source = ["secpi"]
data_file = ".coverage-reports/.coverage"

[tool.coverage.report]
fail_under = 0
show_missing = true
omit = [
]

[tool.ruff]
line-length = 120
extend-exclude = [
  "tmp",
  ".venv39",
  "secpi/web/page/__init__.py",
]

[tool.flake8]
# pip install flake8 flake8-pep518
ignore = ["E722", "W503", "W504"]
per-file-ignores = [
    '__init__.py:F401',
]
max-line-length = 120
count = true


# ===================
# Tasks configuration
# ===================

[tool.poe.tasks]
format = [
  {cmd="black ."},
  {cmd="isort ."},
]
check-style = [
  {cmd="ruff --ignore=F821 ."},
  {cmd="black --check ."},
  {cmd="isort --check ."},
]
test = [
  {cmd="pytest"},
]
build = {cmd="python -m build"}
